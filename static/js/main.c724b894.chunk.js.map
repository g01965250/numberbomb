{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","num","setNum","min","setMin","max","setMax","ans","setAns","handleNumber","e","length","target","dataset","number","handleEnter","alert","console","log","className","onKeyDown","key","test","tabIndex","maxlength","value","onChange","onClick","data-number","Math","floor","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAqGeA,MAlGf,WACE,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,KAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAwBN,mBAAS,IAAjC,mBAAOO,EAAP,KAAaC,EAAb,KAGMC,EAAe,SAACC,GACjBT,EAAI,EACFM,EAAII,OAAO,EACZH,EAAOD,EAAIG,EAAEE,OAAOC,QAAQC,QAE5BN,EAAOD,GAGTC,EAAO,KAYLO,EAAc,WACfR,EAAIN,EACFI,EAAIE,EACLD,EAAOC,GAEPC,EAAO,IAEDD,EAAIN,EACTM,EAAIJ,EACLC,EAAOG,GAELC,EAAO,KAGXN,IACAE,EAAO,GACPE,EAAO,KACPE,EAAO,IACPQ,MAAM,iBAERR,EAAO,KAuBT,OAFAS,QAAQC,IAAIjB,GAGV,qBAAKkB,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAUC,UAtBP,SAACV,GACrB,IAAKW,EAAKX,EAALW,IACF,KAAKC,KAAKD,KACRpB,EAAI,EACFM,EAAII,OAAO,EACZH,EAAOD,EAAIc,GAEXb,EAAOD,GAGTC,EAAO,KAGD,UAAPa,GACDN,KAQmDQ,UAAW,EAA9D,UACE,sBAAKJ,UAAU,MAAf,2CAA2BhB,EAA3B,IAAiCE,KACjC,qBAAKc,UAAU,OAAf,kDACE,uBAAOA,UAAU,eAAeK,UAAU,IAAIC,MAAOlB,EAAKmB,SAAU,SAAChB,GAAD,OAAKF,EAAOE,EAAEE,OAAOa,UAC3F,sBAAKN,UAAU,QAAf,UACE,wBAAQA,UAAU,aAAaQ,QAASlB,EAAcmB,cAAY,IAAlE,eACA,wBAAQT,UAAU,aAAaQ,QAASlB,EAAcmB,cAAY,IAAlE,eACA,wBAAQT,UAAU,aAAaQ,QAASlB,EAAcmB,cAAY,IAAlE,eACA,wBAAQT,UAAU,aAAaQ,QAASlB,EAAcmB,cAAY,IAAlE,eACA,wBAAQT,UAAU,aAAaQ,QAASlB,EAAcmB,cAAY,IAAlE,eACA,wBAAQT,UAAU,aAAaQ,QAASlB,EAAcmB,cAAY,IAAlE,eACA,wBAAQT,UAAU,aAAaQ,QAASlB,EAAcmB,cAAY,IAAlE,eACA,wBAAQT,UAAU,aAAaQ,QAASlB,EAAcmB,cAAY,IAAlE,eACA,wBAAQT,UAAU,aAAaQ,QAASlB,EAAcmB,cAAY,IAAlE,eACA,wBAAQT,UAAU,aAAaQ,QAASlB,EAAcmB,cAAY,IAAlE,eACA,sBAAKT,UAAU,eAAf,UACE,wBAAQA,UAAU,iBAAiBQ,QAtEzB,WAClBzB,EAAO2B,KAAKC,MAAuB,IAAjBD,KAAKE,UAAoB,GAC3C3B,EAAO,GACPE,EAAO,KACPE,EAAO,KAkEC,0BACA,wBAAQW,UAAU,iBAAiBQ,QAjEzB,WAClBnB,EAAO,KAgEC,0BACA,wBAAQW,UAAU,iBAAiBQ,QAASZ,EAA5C,sCCjFGiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c724b894.chunk.js","sourcesContent":["import './App.css';\nimport { useState , useEffect } from 'react'\n\nfunction App() {\n  const[ num , setNum ] = useState()\n  const[ min , setMin ] = useState(0)\n  const[ max , setMax ] = useState(100)\n  const[ ans , setAns ] = useState('')\n\n\n  const handleNumber = (e) =>{\n    if(num>0){\n      if(ans.length<2){\n        setAns(ans+e.target.dataset.number)\n      }else{\n        setAns(ans)\n      }\n    }else{\n      setAns('')   \n    }\n  }\n  const handleStart = () =>{\n    setNum(Math.floor(Math.random() * (101)) + 0)\n    setMin(0)\n    setMax(100)\n    setAns('')\n  }\n  const handleClear = () =>{\n    setAns('')\n  }\n  const handleEnter = () =>{\n    if(ans>num){\n      if(max>ans){\n        setMax(ans)\n      }else{\n        setAns('')\n      }\n    }else if (ans<num){\n      if(ans>min){\n        setMin(ans)\n        }else{\n          setAns('')\n        }\n    }else{\n      setNum()\n      setMin(0)\n      setMax(100)\n      setAns('')\n      alert('過關')\n    }\n    setAns('')\n  }\n  \n  const handleKeyDown = (e) => {\n    let {key}=e\n    if(/\\d/.test(key)){\n      if(num>0){\n        if(ans.length<2){\n          setAns(ans+key)\n        }else{\n          setAns(ans)\n        }\n      }else{\n        setAns('')\n      }\n    }\n    if(key ===\"Enter\"){\n      handleEnter()\n    }\n  }\n\n  console.log(num)\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\" onKeyDown={handleKeyDown} tabIndex={-1}>\n        <div className=\"Ans\">終極密碼：{min}-{max}</div>\n        <div className=\"text\">請輸入答案：</div>\n          <input className=\"input_number\" maxlength=\"2\" value={ans} onChange={(e)=>setAns(e.target.value)}></input>\n        <div className=\"input\">\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"1\">1</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"2\">2</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"3\">3</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"4\">4</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"5\">5</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"6\">6</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"7\">7</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"8\">8</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"9\">9</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"0\">0</button>\n          <div className=\"text_wrapper\">\n            <button className=\"start_btn text\" onClick={handleStart}>開始</button>\n            <button className=\"clear_btn text\" onClick={handleClear}>清除</button>\n            <button className=\"enter_btn text\" onClick={handleEnter}>輸入</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}