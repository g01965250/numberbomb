{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","ans","setAns","min","setMin","max","setMax","inputNum","setInputNum","handleNumber","e","length","target","dataset","number","handleEnter","Number","alert","className","onKeyDown","key","test","console","log","tabIndex","readonly","maxlength","value","onChange","onClick","data-number","Math","floor","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAiGeA,MA9Ff,WACE,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,KAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,KAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAGMC,EAAe,SAACC,GACjBT,EAAI,EACFM,EAASI,OAAO,EACjBH,EAAYD,EAASG,EAAEE,OAAOC,QAAQC,QAEtCN,EAAYD,GAGdC,EAAY,KAaVO,EAAc,WACfC,OAAOT,GAAUS,OAAOf,GACtBe,OAAOX,GAAKW,OAAOT,IACpBD,EAAOU,OAAOT,IAETS,OAAOT,GAAUS,OAAOf,GAC5Be,OAAOb,GAAKa,OAAOT,IACpBH,EAAOY,OAAOT,IAETS,OAAOT,KAAYS,OAAOf,KACjCgB,MAAM,gBACNf,EAAO,KACPE,EAAO,KACPE,EAAO,MAETE,EAAY,KAuBd,OACE,qBAAKU,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAUC,UAtBP,SAACT,GACrB,IAAKU,EAAKV,EAALU,IACD,MAAOC,KAAKD,KACdE,QAAQC,IAAI,MAAMH,GACfnB,EAAI,EACFM,EAASI,OAAO,EACjBH,EAAYD,EAASa,GAErBZ,EAAYD,GAGdC,EAAY,KAGN,UAAPY,GACDL,KAOmDS,UAAW,EAA9D,UACE,sBAAKN,UAAU,MAAf,2CAA2Bf,EAA3B,IAAiCE,KACjC,qBAAKa,UAAU,OAAf,kDACE,uBAAOA,UAAU,eAAeO,SAAS,WAAWC,UAAU,IAAIC,MAAOpB,EAAUqB,SAAU,SAAClB,GAAD,OAAKF,EAAYE,EAAEE,OAAOe,UACzH,sBAAKT,UAAU,QAAf,UACE,wBAAQA,UAAU,aAAaW,QAASpB,EAAcqB,cAAY,IAAlE,eACA,wBAAQZ,UAAU,aAAaW,QAASpB,EAAcqB,cAAY,IAAlE,eACA,wBAAQZ,UAAU,aAAaW,QAASpB,EAAcqB,cAAY,IAAlE,eACA,wBAAQZ,UAAU,aAAaW,QAASpB,EAAcqB,cAAY,IAAlE,eACA,wBAAQZ,UAAU,aAAaW,QAASpB,EAAcqB,cAAY,IAAlE,eACA,wBAAQZ,UAAU,aAAaW,QAASpB,EAAcqB,cAAY,IAAlE,eACA,wBAAQZ,UAAU,aAAaW,QAASpB,EAAcqB,cAAY,IAAlE,eACA,wBAAQZ,UAAU,aAAaW,QAASpB,EAAcqB,cAAY,IAAlE,eACA,wBAAQZ,UAAU,aAAaW,QAASpB,EAAcqB,cAAY,IAAlE,eACA,wBAAQZ,UAAU,aAAaW,QAASpB,EAAcqB,cAAY,IAAlE,eACA,sBAAKZ,UAAU,eAAf,UACE,wBAAQA,UAAU,iBAAiBW,QAlEzB,WAClB3B,EAAO6B,KAAKC,MAAuB,IAAjBD,KAAKE,UAAoB,GAC3C7B,EAAO,GACPE,EAAO,KACPE,EAAY,IACZS,MAAM,6BA6DE,0BACA,wBAAQC,UAAU,iBAAiBW,QA5DzB,WAClBrB,EAAY,KA2DJ,0BACA,wBAAQU,UAAU,iBAAiBW,QAASd,EAA5C,sCC7EGmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c81b71f1.chunk.js","sourcesContent":["import './App.css';\nimport { useState , useEffect } from 'react'\n\nfunction App() {\n  const[ ans , setAns ] = useState()\n  const[ min , setMin ] = useState('-')\n  const[ max , setMax ] = useState('-')\n  const[ inputNum , setInputNum ] = useState(null)\n\n\n  const handleNumber = (e) =>{\n    if(ans>0){\n      if(inputNum.length<2){\n        setInputNum(inputNum+e.target.dataset.number)\n      }else{\n        setInputNum(inputNum)\n      }\n    }else{\n      setInputNum('')   \n    }\n  }\n  const handleStart = () =>{\n    setAns(Math.floor(Math.random() * (101)) + 1)\n    setMin(0)\n    setMax(100)\n    setInputNum('')\n    alert('遊戲開始')\n  }\n  const handleClear = () =>{\n    setInputNum('')\n  }\n  const handleEnter = () =>{\n    if(Number(inputNum)>Number(ans)){\n      if(Number(max)>Number(inputNum)){\n        setMax(Number(inputNum))\n      }\n    }else if(Number(inputNum)<Number(ans)){\n      if(Number(min)<Number(inputNum)){\n        setMin(Number(inputNum))\n      }\n    }else if(Number(inputNum)===Number(ans)){\n      alert('過關')\n      setAns('-')\n      setMin('-')\n      setMax('-')\n    }\n    setInputNum('')\n  }\n  \n  const handleKeyDown = (e) => {\n    let {key}=e\n    if((/^\\d/).test(key)){\n      console.log(\"key\",key)\n      if(ans>0){\n        if(inputNum.length<2){\n          setInputNum(inputNum+key)\n        }else{\n          setInputNum(inputNum)\n        }\n      }else{\n        setInputNum('')\n      }\n    }\n    if(key ===\"Enter\"){\n      handleEnter()\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\" onKeyDown={handleKeyDown} tabIndex={-1}>\n        <div className=\"Ans\">終極密碼：{min}-{max}</div>\n        <div className=\"text\">請輸入答案：</div>\n          <input className=\"input_number\" readonly=\"readonly\" maxlength=\"2\" value={inputNum} onChange={(e)=>setInputNum(e.target.value)}></input>\n        <div className=\"input\">\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"1\">1</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"2\">2</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"3\">3</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"4\">4</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"5\">5</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"6\">6</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"7\">7</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"8\">8</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"9\">9</button>\n          <button className=\"number_btn\" onClick={handleNumber} data-number=\"0\">0</button>\n          <div className=\"text_wrapper\">\n            <button className=\"start_btn text\" onClick={handleStart}>開始</button>\n            <button className=\"clear_btn text\" onClick={handleClear}>清除</button>\n            <button className=\"enter_btn text\" onClick={handleEnter}>輸入</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}